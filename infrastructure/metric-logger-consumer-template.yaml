AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: <your stack description here>

# Available top-level fields are listed in code completion
Parameters:
  EventBusName:
    Type: String
    Description: The EventBus Name
  EventSource:
    Type: String
    Description: The Event bus source
  OwnerPrefix:
    Type: String
    Default: Metric-logger
    Description: Prefix to be used in names of the things created by this stack.
# Add Resources Here: uncomment the following lines
Resources:
  LogMessageRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to Log current activity.
      EventBusName: !Ref EventBusName
      EventPattern:
        source:
          - !Ref EventSource
        detail-type:
          - first_check_attempt
          - second_check_attempt
      RoleArn: !GetAtt WriteToCloudWatchRole.Arn
      Targets:
        - Id: SendCurrentActivityToLogGroup
          Arn: !GetAtt CustomStateMachineLogGroup.Arn
          InputTransformer:
            InputPathsMap:
              message: "$.detail.Message"
              Id: "$.detail.executionId"
              govukid: "$.detail.govukid"
              attempt: "$.detail.Attempt"
              timestamp: "$.time"
            InputTemplate: |
              {
               "timestamp":<timestamp>,
               "message": "Execution Id: <Id> <message> with govuk_signin_journey_id: <govukid> is at <attempt>"
              }
  UserAttemptsRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to process User Attempt.
      EventBusName: !Ref EventBusName
      EventPattern:
        source:
          - !Ref EventSource
        detail-type:
          - first_check_attempt
          - second_check_attempt
      RoleArn: !GetAtt WriteToCloudWatchRole.Arn
      Targets:
        - Id: SendToCustomStepFunctionsLogGroup
          Arn: !GetAtt CustomStateMachineLogGroup.Arn
          InputTransformer:
            InputPathsMap:
              value: "$.detail.Message"
              name: "$.detail.Attempt"
              metric: "$.detail-type"
              timestamp: "$.time"
            InputTemplate: !Sub
              - |
                {
                  "timestamp": <timestamp>,
                  "message": "{\"_aws\":{\"Timestamp\":1574109732004,\"CloudWatchMetrics\":[{\"Namespace\":\"${namespace}\",\"Dimensions\":[{\"Name\":<name>,\"Value\":<value>}],\"Metrics\":[{\"Name\":<metric>,\"Unit\":\"Count\",\"Value\":\"1.0\"}]}],\"functionVersion\":\"$LATEST\"}}"
                }
              - namespace: !Ref OwnerPrefix

  UserAttemptsExceededRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to process User Attempt.
      EventBusName: !Ref EventBusName
      EventPattern:
        source:
          - !Ref EventSource
        detail-type:
          - third_check_attempt
      RoleArn: !GetAtt WriteToCloudWatchRole.Arn
      Targets:
        - Id: SendToCustomStepFunctionsLogGroup
          Arn: !GetAtt CustomStateMachineLogGroup.Arn
  CustomStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: !Join
        - ""
        - - /aws/events/
          - !Ref OwnerPrefix
          - "-"
          - stepfunction-custom-logs

  WriteToCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: WriteToAccountsLogGroup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStreams
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt CustomStateMachineLogGroup.Arn
