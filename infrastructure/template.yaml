AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV CRI Pdv-Matching API
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  BearerTokenName:
    Type: String
    Default: HMRCBearerToken
    Description: >-
      The name of the bearer token parameter.
      Temporary solution to be changed once cross account behaviour implemented.
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, localdev, build, staging, integration, production]
    ConstraintDescription: must be dev, localdev, build, staging, integration or production
  CommonStackName:
    Type: String
    Default: common-cri-api
    Description: The name of the stack containing the common CRI lambdas/infra
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""
  DeployAlarmsInDevEnvironment:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: false
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  SupportManualURL:
    Type: String
    Default: "https://govukverify.atlassian.net/wiki/spaces/OJ/pages/4090790413/NINO+Check+Credential+Issuer+support+runbook"
    Description: The support manual URL to be provided in alarm messages.

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsDevLikeEnvironment:
    !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production

  IsNotDevLikeEnvironment: !Not
    - !Condition IsDevLikeEnvironment

  DeployAlarms: !Or
    - !Condition IsNotDevLikeEnvironment
    - !Equals [!Ref DeployAlarmsInDevEnvironment, "true"]

Mappings:
  # Only numeric values should be assigned here
  MaxJwtTtl:
    Environment:
      dev: 2
      localdev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnit:
    Environment:
      dev: HOURS
      localdev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      localdev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  Audit:
    EventName:
      ResponseReceived: RESPONSE_RECEIVED
      RequestSent: REQUEST_SENT
      VcIssued: VC_ISSUED
      End: END
      Abandoned: ABANDONED
    Source:
      dev: review-hc.dev.account.gov.uk
      localdev: review-hc.localdev.account.gov.uk
      build: review-hc.build.account.gov.uk
      staging: review-hc.staging.account.gov.uk
      integration: review-hc.integration.account.gov.uk
      production: review-hc.production.account.gov.uk

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

Globals:
  Function:
    Timeout: 30
    CodeUri: ..
    Runtime: nodejs18.x
    Architectures: [arm64]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - !ImportValue cri-vpc-ProtectedSubnetIdA
        - !ImportValue cri-vpc-ProtectedSubnetIdB
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]

Resources:
  EpochTimeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/epoch-time/src/get-epoch-time-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/EpochTimeFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  EpochTimeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/EpochTimeFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  EpochTimeFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref EpochTimeFunctionLogGroup

  EpochTimeFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref EpochTimeFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${EpochTimeFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  EpochTimeFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${EpochTimeFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${EpochTimeFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions: [!ImportValue platform-alarm-warning-alert-topic]
      AlarmActions: [!ImportValue platform-alarm-warning-alert-topic]
      InsufficientDataActions: []
      MetricName: !Sub ${EpochTimeFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CiMappingFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/ci-mapping/src/ci-mapping-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/CiMappingFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  CiMappingFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/CiMappingFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  CiMappingFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref CiMappingFunctionLogGroup

  CiMappingFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CiMappingFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${CiMappingFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  CiMappingFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${CiMappingFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${CiMappingFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${CiMappingFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CreateAuthCodeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/matching/src/create-auth-code-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/CreateAuthCodeFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  CreateAuthCodeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/CreateAuthCodeFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  CreateAuthCodeFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref CreateAuthCodeFunctionLogGroup

  CreateAuthCodeFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CreateAuthCodeFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${CreateAuthCodeFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  CreateAuthCodeFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${CreateAuthCodeFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${CreateAuthCodeFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${CreateAuthCodeFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CredentialSubjectFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/credential-subject/src/credential-subject-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/CredentialSubjectFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  CredentialSubjectFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/CredentialSubjectFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  CredentialSubjectFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref CredentialSubjectFunctionLogGroup

  CredentialSubjectFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CredentialSubjectFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${CredentialSubjectFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  CredentialSubjectFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${CredentialSubjectFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${CredentialSubjectFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${CredentialSubjectFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CurrentTimeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/matching/src/current-time-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/CurrentTimeFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  CurrentTimeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/CurrentTimeFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  CurrentTimeFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref CurrentTimeFunctionLogGroup

  CurrentTimeFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CurrentTimeFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${CurrentTimeFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  CurrentTimeFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${CurrentTimeFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${CurrentTimeFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${CurrentTimeFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  JwtSignerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/jwt-signer/src/jwt-signer-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/JwtSignerFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - Statement:
            Effect: Allow
            Action: kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn

  JwtSignerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/JwtSignerFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  JwtSignerFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref JwtSignerFunctionLogGroup

  JwtSignerFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref JwtSignerFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${JwtSignerFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  JwtSignerFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${JwtSignerFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${JwtSignerFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${JwtSignerFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  OTGFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/otg-api/src/otg-api-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/OTGFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  OTGFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/OTGFunction
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  OTGFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref OTGFunctionLogGroup

  OTGFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OTGFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${MatchingFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  OTGFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${OTGFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${OTGFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${OTGFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  OTGFunctionFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OTGFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "OTGFunction-Fatalerror"

  OTGFunctionFatalErrorAlarm:
    DependsOn:
      - "OTGFunctionFatalErrorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: BearerTokenHandlerFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  OTGFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${OTGFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-OTGFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref OTGFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  MatchingFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/matching/src/matching-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/MatchingFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  MatchingFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/MatchingFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  MatchingFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref MatchingFunctionLogGroup

  MatchingFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref MatchingFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${MatchingFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  MatchingFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${MatchingFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${MatchingFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${MatchingFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  SsmParametersFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/ssm-parameters/src/ssm-parameters-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/SsmParametersFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "*"

  SsmParametersFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/SsmParametersFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  SsmParametersFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref SsmParametersFunctionLogGroup

  SsmParametersFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref SsmParametersFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${SsmParametersFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  SsmParametersFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${SsmParametersFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${SsmParametersFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${SsmParametersFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TimeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/issue-credential/src/time-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/TimeFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  TimeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/TimeFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  TimeFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref TimeFunctionLogGroup

  TimeFunctionEventErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref TimeFunctionLogGroup
      FilterPattern: "{($.eventName = ExecutionsFailed) || ($.eventName = ExecutionThrottled) || ($.eventName = ExecutionsAborted) || ($.eventName = ExecutionsTimedOut)}"
      MetricTransformations:
        - MetricValue: 1
          MetricName: !Sub ${TimeFunction}-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  TimeFunctionEventErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-${TimeFunction}-Errors"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when the ${TimeFunction} errors. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: !Sub ${TimeFunction}-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  UserAgent:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/UserAgent
      Value: govuk-one-login
      Description: User agent for HMRC requests

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/MaxJwtTtl
      Value: !FindInMap [MaxJwtTtl, Environment, !Ref Environment]
      Description: Default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${AWS::StackName}/JwtTtlUnit
      Value: !FindInMap [JwtTtlUnit, Environment, !Ref Environment]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  PublicNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PublicNinoCheckApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-public
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: public-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PublicNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/apigateway/${AWS::StackName}-${PublicNinoCheckApi}-public-AccessLogs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  PublicNinoCheckApiLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref PublicNinoCheckApiAccessLogGroup

  PublicNinoCheckApiFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PublicNinoCheckApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PublicNinoCheckApi-Fatalerror"

  PublicNinoCheckApiFatalErrorAlarm:
    DependsOn:
      - "PublicNinoCheckApiFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-PublicNinoCheckApi-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: PublicNinoCheckApi-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PrivateNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateNinoCheckApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy: !If
          - IsLocalDevEnvironment
          - !Ref AWS::NoValue
          - CustomStatements:
              - Effect: Allow
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"

  PrivateNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateNinoCheckApi}-private-AccessLogs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  PrivateNinoCheckApiLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref PrivateNinoCheckApiAccessLogGroup

  PrivateNinoCheckApiFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PrivateNinoCheckApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PrivateNinoCheckApi-Fatalerror"

  PrivateNinoCheckApiFatalErrorAlarm:
    DependsOn:
      - "PrivateNinoCheckApiFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-PrivateNinoCheckApi-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: PrivateNinoCheckApi-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  UserAttemptsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-user-attempts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE

  NinoUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-nino-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH

  CheckSessionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/check_session.asl.json
      DefinitionSubstitutions:
        CurrentTimeFunctionArn: !GetAtt CurrentTimeFunction.Arn
        CommonStackName: !Ref CommonStackName
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CheckSessionStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CurrentTimeFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  CheckSessionStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CheckSessionStateMachineLogGroup
      FilterPattern: '{($.type = "ExecutionFailed")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "CheckSessionStateMachine-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  CheckSessionStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: "DeployAlarms"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Check Session failed 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-CheckSessionStateMachineAlarm"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref CheckSessionStateMachine

  NinoCheckStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/nino_check.asl.json
      DefinitionSubstitutions:
        AuditEventPrefix: !Ref AuditEventNamePrefix
        CheckSessionStateMachineArn: !Ref CheckSessionStateMachine
        CreateAuthCodeFunctionArn: !GetAtt CreateAuthCodeFunction.Arn
        MatchingFunctionArn: !GetAtt MatchingFunction.Arn
        UserAttemptsTable: !Ref UserAttemptsTable
        NinoUsersTable: !Ref NinoUsersTable
        UserAgent: !Ref UserAgent
        BearerTokenName: !Ref BearerTokenName
        CommonStackName: !Ref CommonStackName
        SsmParametersFunction: !Ref SsmParametersFunction
        OTGFunction: !Ref OTGFunction
        CheckHmrcEventBus: !Ref CheckHmrcEventBus
        CheckHmrcEventBusSource: !FindInMap [Audit, Source, !Ref Environment]
        AuditEventNameResponseReceived:
          !FindInMap [Audit, EventName, ResponseReceived]
        AuditEventNameRequestSent: !FindInMap [Audit, EventName, RequestSent]
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt NinoCheckStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref OTGFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SsmParametersFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateAuthCodeFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MatchingFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBWritePolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref CheckHmrcEventBus
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref CheckSessionStateMachine
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/check-hmrc-cri-api/NinoCheckUrl/*"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${UserAgent}"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  NinoCheckStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}-NinoCheck-state-machine-logs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  NinoCheckStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref NinoCheckStateMachineLogGroup

  NinoCheckStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{$.type = "ExecutionFailed"}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "NinoCheckStateMachine}-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  NinoCheckStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: "DeployAlarms"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "NINO Check failed 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-NinoCheckStateMachineAlarm"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref NinoCheckStateMachine

  AbandonStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/abandon.asl.json
      DefinitionSubstitutions:
        AuditEventPrefix: !Ref AuditEventNamePrefix
        CheckSessionStateMachineArn: !Ref CheckSessionStateMachine
        CommonStackName: !Ref CommonStackName
        SsmParametersFunction: !Ref SsmParametersFunction
        CheckHmrcEventBus: !Ref CheckHmrcEventBus
        CheckHmrcEventBusSource: !FindInMap [Audit, Source, !Ref Environment]
        AuditEventNameAbandoned: !FindInMap [Audit, EventName, Abandoned]
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt AbandonStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref SsmParametersFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref CheckHmrcEventBus
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref CheckSessionStateMachine
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  AbandonStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}-Abandon-state-machine-logs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  AbandonStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref AbandonStateMachineLogGroup

  AbandonStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref AbandonStateMachineLogGroup
      FilterPattern: '{$.type = "ExecutionFailed"}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "AbandonStateMachine}-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  AbandonStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: "DeployAlarms"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Abandon failed 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AbandonStateMachineAlarm"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref AbandonStateMachine

  NinoIssueCredentialStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/nino_issue_credential.asl.json
      DefinitionSubstitutions:
        AuditEventPrefix: !Ref AuditEventNamePrefix
        CiMappingFunctionArn: !GetAtt CiMappingFunction.Arn
        TimeFunctionArn: !GetAtt TimeFunction.Arn
        CredentialSubjectFunctionArn: !GetAtt CredentialSubjectFunction.Arn
        UserAttemptsTable: !Ref UserAttemptsTable
        MaxJwtTtlParameter: !Ref MaxJwtTtlParameter
        JwtTtlUnitParameter: !Ref JwtTtlUnitParameter
        CommonStackName: !Ref CommonStackName
        NinoUsersTable: !Ref NinoUsersTable
        JwtSignerFunction: !GetAtt JwtSignerFunction.Arn
        SsmParametersFunction: !Ref SsmParametersFunction
        CheckHmrcEventBus: !Ref CheckHmrcEventBus
        CheckHmrcEventBusSource: !FindInMap [Audit, Source, !Ref Environment]
        AuditEventNameVcIssued: !FindInMap [Audit, EventName, VcIssued]
        AuditEventNameEnd: !FindInMap [Audit, EventName, End]
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt NinoIssueCredentialLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref SsmParametersFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CiMappingFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref TimeFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CredentialSubjectFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref JwtSignerFunction
        - DynamoDBReadPolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref CheckHmrcEventBus
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${MaxJwtTtlParameter}"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${JwtTtlUnitParameter}"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/check-hmrc-cri-api/contraindicationMappings"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/check-hmrc-cri-api/contraIndicatorReasonsMapping"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
        - Statement:
            Effect: Allow
            Action: kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  NinoIssueCredentialLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}-NinoIssueCredential-state-machine-logs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  NinoIssueCredentialLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref NinoIssueCredentialLogGroup

  NinoIssueCredentialStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoIssueCredentialLogGroup
      FilterPattern: '{$.type = "ExecutionFailed"}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "NinoIssueCredentialStateMachine}-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  NinoIssueCredentialStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: "DeployAlarms"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "NINO Issue Credential failed 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-NinoIssueCredentialStateMachineAlarm"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref NinoIssueCredentialStateMachine

  CheckSessionStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}-CheckSession-state-machine-logs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  CheckSessionStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref CheckSessionStateMachineLogGroup

  CheckHmrcEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Sub ${AWS::StackName}-CheckHmrcEventBus
  ##################################################################
  #                                                                  #
  # Nino Check Audit Event Consumer                                  #
  #                                                                  #
  ####################################################################
  AuditEventResponseReceivedRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Capture the audit event RESPONSE_RECEIVED
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail-type:
          - !FindInMap [Audit, EventName, ResponseReceived]
      Targets:
        - Arn: !Ref AuditEventStateMachine
          Id: AuditEventStateMachineResponseReceivedTarget
          RoleArn: !GetAtt EventBridgeStateMachineExecutionRole.Arn
  AuditEventRequestSentRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Capture the audit event REQUEST_SENT
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail-type:
          - !FindInMap [Audit, EventName, RequestSent]
      Targets:
        - Arn: !Ref AuditEventStateMachine
          Id: AuditEventStateMachineRequestSentTarget
          RoleArn: !GetAtt EventBridgeStateMachineExecutionRole.Arn
  AuditEventVcIssuedRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Capture the audit event VC_ISSUED
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail-type:
          - !FindInMap [Audit, EventName, VcIssued]
      Targets:
        - Arn: !Ref AuditEventStateMachine
          Id: AuditEventStateMachineVcIssuedTarget
          RoleArn: !GetAtt EventBridgeStateMachineExecutionRole.Arn
  AuditEventEndRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Capture the END event
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail-type:
          - !FindInMap [Audit, EventName, End]
      Targets:
        - Arn: !Ref AuditEventStateMachine
          Id: AuditEventStateMachineEndTarget
          RoleArn: !GetAtt EventBridgeStateMachineExecutionRole.Arn
  AuditEventAbandonedRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Capture the ABANDONED event
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail-type:
          - !FindInMap [Audit, EventName, Abandoned]
      Targets:
        - Arn: !Ref AuditEventStateMachine
          Id: AuditEventStateMachineAbandonedTarget
          RoleArn: !GetAtt EventBridgeStateMachineExecutionRole.Arn

  TxMaAuditEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref CheckHmrcEventBus
      Description: Publish all formatted events from AuditEvent Step Function to TxMA audit Queue
      State: ENABLED
      EventPattern:
        source:
          - !FindInMap [Audit, Source, !Ref Environment]
        detail:
          timestamp: [{ "exists": true }]
          event_timestamp_ms: [{ "exists": true }]
      Targets:
        - Arn: !Sub
            - "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${auditEventQueueName}"
            - auditEventQueueName: !ImportValue "AuditEventQueueName"
          Id: AuditEventQueue
          InputPath: "$.detail"
  EventBridgeToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: SQS:SendMessage
            Resource: !Sub
              - "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${auditEventQueueName}"
              - auditEventQueueName: !ImportValue "AuditEventQueueName"
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !ImportValue AuditEventQueueEncryptionKeyArn
      Queues:
        - !ImportValue "AuditEventQueueName"

  EventBridgeStateMachineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
      Policies:
        - PolicyName: EventBridgeStateMachineExecutionStartExecutionPolicy
          PolicyDocument:
            Statement:
              - Action: states:StartExecution
                Effect: Allow
                Resource: !Ref AuditEventStateMachine
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
  ##################################################################
  #                                                                  #
  # Audit Event Consumer Rule Alarms                                 #
  #                                                                  #
  ####################################################################
  TxMaAuditEventRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "TxMaAuditEventRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-TxMaAuditEventRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref TxMaAuditEventRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  AuditEventRequestSentRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AuditEventRequestSentRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AuditEventRequestSentRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref AuditEventRequestSentRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  AuditEventResponseReceivedRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AuditEventResponseReceivedRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AuditEventResponseReceivedRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref AuditEventResponseReceivedRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  AuditEventVcIssuedRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AuditEventVcIssuedRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AuditEventVcIssuedRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref AuditEventVcIssuedRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  AuditEventEndRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AuditEventEndRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AuditEventEndRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref AuditEventEndRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  AuditEventAbandonedRuleAlarm:
    Condition: "DeployAlarms"
    Type: AWS::CloudWatch::Alarm
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AuditEventAbandonedRule (Failed Invocations) 4 or more requests in the last hour. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-AuditEventAbandonedRule-alarm"
      MetricName: "FailedInvocations"
      Namespace: "AWS/Events"
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      Period: 300
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: RuleName
          Value: !Select [1, !Split ["|", !Ref AuditEventAbandonedRule]]
        - Name: EventBusName
          Value: !Ref CheckHmrcEventBus

  ###############################################################################

  AuditEventStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ../step-functions/audit_event.asl.json
      DefinitionSubstitutions:
        CredentialSubjectFunctionArn: !GetAtt CredentialSubjectFunction.Arn
        EpochTimeArn: !GetAtt EpochTimeFunction.Arn
        CheckHmrcEventBus: !Ref CheckHmrcEventBus
        CheckHmrcEventBusSource: !FindInMap [Audit, Source, !Ref Environment]
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt AuditEventStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CredentialSubjectFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref EpochTimeFunction
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref CheckHmrcEventBus
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  AuditEventStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-AuditEvent-state-machine-logs
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
      DataProtectionPolicy:
        Name: data-protection-policy
        Description: ""
        Version: "2021-06-01"
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Audit:
                FindingsDestination: { }
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/DateOfBirth
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Name
              - arn:aws:dataprotection::aws:data-identifier/NationalInsuranceNumber-GB
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - userId
              - firstName
              - lastName
              - DOBInQuery
              - addressPart1
              - addressPart2
              - subject
              - givenNameOrFamilyName
            Operation:
              Deidentify:
                MaskConfig: { }
        Configuration:
          CustomDataIdentifier:
            - Name: userId
              Regex: "\\\\\"user_id\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: firstName
              Regex: "\\\\\"firstName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: lastName
              Regex: "\\\\\"lastName\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: DOBInQuery
              Regex: "(?:\\\\\"birthDates\\\\\").*?\\\\\"S\\\\\":\\\\\"(\\d{4}-\\d{2}-\\d{2})\\\\\""
            - Name: addressPart1
              Regex: "\\\\\"buildingName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"addressLocality\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"buildingNumber\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: addressPart2
              Regex: "\\\\\"postalCode\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\"|\\\\\"streetName\\\\\":\\{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""
            - Name: subject
              Regex: "\\\\\"subject\\\\\"\\s*:\\s*\\\\\"([^\"]*)\\\\\""
            - Name: givenNameOrFamilyName
              Regex: "(?:\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"GivenName\\\\\"}|\\\\\"type\\\\\":{\\\\\"S\\\\\":\\\\\"FamilyName\\\\\"}),\\\\\"value\\\\\":{\\\\\"S\\\\\":\\\\\"([^\"]*)\\\\\""

  AuditEventStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref AuditEventStateMachineLogGroup

  ####################################################################
  #                                                                  #
  #  Metrics                                                         #
  #                                                                  #
  ####################################################################
  SuccessfulNinoCheckMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Store Successful Attempt")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: SuccessfulFirstAttemptMetric
          MetricNamespace: !Ref CriIdentifier

  RetryAttemptsSentMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Send Retry")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: RetryAttemptsSentMetric
          MetricNamespace: !Ref CriIdentifier

  FailedHMRCAuthMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Err: Failed Auth")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: FailedHMRCAuthMetric
          MetricNamespace: !Ref CriIdentifier

  HMRCAPIErrorMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Err: API Error")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: HMRCAPIErrorMetric
          MetricNamespace: !Ref CriIdentifier

  MatchingLambdaErrorMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Err: Matching Lambda Exception")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: MatchingLambdaErrorMetric
          MetricNamespace: !Ref CriIdentifier

  DeceasedUserMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Store Deceased Attempt")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: DeceasedUserMetric
          MetricNamespace: !Ref CriIdentifier

  AttemptsExceededMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Err: Attempts exceeded")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: AttemptsExceededMetric
          MetricNamespace: !Ref CriIdentifier

  InvalidSessionErrorMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoCheckStateMachineLogGroup
      FilterPattern: '{($.details.name = "Err: Invalid Session")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: InvalidSessionErrorMetric
          MetricNamespace: !Ref CriIdentifier

  CIRaisedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoIssueCredentialLogGroup
      FilterPattern: '{($.details.name = "Fetch CI")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: CIRaisedMetric
          MetricNamespace: !Ref CriIdentifier

  VCIssuedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref NinoIssueCredentialLogGroup
      FilterPattern: '{($.details.name = "Create Signed JWT")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: VCIssuedMetric
          MetricNamespace: !Ref CriIdentifier

  AbandonedJourneyMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref AbandonStateMachineLogGroup
      FilterPattern: '{($.details.name = "Clear Auth Code")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: AbandonedAuthMetric
          MetricNamespace: !Ref CriIdentifier

##################################################################
#                                                                  #
#  Stack Outputs                                                   #
#                                                                  #
####################################################################
Outputs:
  SsmParametersFunctionArn:
    Description: SsmParameters Lambda Function ARN
    Value: !GetAtt SsmParametersFunction.Arn
  ApiGatewayId:
    Description: API GatewayID of the Nino Check HMRC CRI API
    Value: !Ref PublicNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-ApiGatewayId
  PublicApiGatewayId:
    Description: API Gateway ID of the public Nino Check HMRC CRI API
    Value: !Ref PublicNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-PublicApiGatewayId
  PrivateApiGatewayId:
    Description: API Gateway ID of the private Nino Check HMRC API
    Value: !Ref PrivateNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  NinoCheckStateMachineArn:
    Description: Nino Check state machine ARN
    Value: !Ref NinoCheckStateMachine
  CheckSessionStateMachineArn:
    Description: Session Check state machine ARN
    Value: !Ref CheckSessionStateMachine
  NinoIssueCredentialStateMachineArn:
    Description: Nino Issue Credential state machine ARN
    Value: !Ref NinoIssueCredentialStateMachine
  CommonStackName:
    Description: Common Stack Name
    Value: !Ref CommonStackName
  UserAttemptsTable:
    Description: UserAttemptsTable table name
    Value: !Ref UserAttemptsTable
  NinoUsersTable:
    Description: NinoUsersTable table name
    Value: !Ref NinoUsersTable
  AbandonStateMachineArn:
    Description: Abandon state machine ARN
    Value: !Ref AbandonStateMachine
  AuditEventResponseReceivedRule:
    Description: AuditEvent Response Received Rule
    Value: !Ref AuditEventResponseReceivedRule
  AuditEventResponseReceivedRuleArn:
    Description: AuditEvent Response Received Rule Arn
    Value: !GetAtt AuditEventResponseReceivedRule.Arn
  AuditEventRequestSentRule:
    Description: AuditEvent Request Sent Rule
    Value: !Ref AuditEventRequestSentRule
  AuditEventRequestSentRuleArn:
    Description: AuditEvent Request Sent Rule Arn
    Value: !GetAtt AuditEventRequestSentRule.Arn
  AuditEventAbandonedRule:
    Description: AuditEvent Abandon Rule
    Value: !Ref AuditEventAbandonedRule
  AuditEventAbandonedRuleArn:
    Description: AuditEvent Abandon Rule Arn
    Value: !GetAtt AuditEventAbandonedRule.Arn
  AuditEventVcIssuedRule:
    Description: AuditEvent VC Issued Rule
    Value: !Ref AuditEventVcIssuedRule
  AuditEventVcIssuedRuleArn:
    Description: AuditEvent VC Issued Rule Arn
    Value: !GetAtt AuditEventVcIssuedRule.Arn
  AuditEventEndRule:
    Description: AuditEvent End Rule
    Value: !Ref AuditEventEndRule
  AuditEventEndRuleArn:
    Description: AuditEvent End Rule
    Value: !GetAtt AuditEventEndRule.Arn
