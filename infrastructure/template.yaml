AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity IPV CRI Pdv-Matching API"

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        [
          !ImportValue cri-vpc-ProtectedSubnetIdA,
          !ImportValue cri-vpc-ProtectedSubnetIdB,
        ]
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Timeout: 3
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - EnforceCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue

Mappings:
  # Only numeric values should be assigned here
  MaxJwtTtlMapping:
    Environment:
      dev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

Parameters:
  CodeSigningEnabled:
    Type: "String"
    Default: "true"
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  BearerTokenName:
    Description: "The name of the bearer token parameter"
    Type: String
    # Temporary - solution to be changed once cross account behaviour implemented
    Default: "HMRCBearerToken"
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: "common-cri-api"

Conditions:
  EnforceCodeSigning: !Equals
    - !Ref CodeSigningEnabled
    - true
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment
  IsStubEnvironment: !Or
    - !Equals [!Ref Environment, dev]
    - !Equals [!Ref Environment, build]
    - !Equals [!Ref Environment, integration]
  IsStagingEnvironment: !Equals
    - !Ref Environment
    - staging
  IsProductionEnvironment: !Equals
    - !Ref Environment
    - production

Resources:
  UserAgent:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/UserAgent"
      Value: govuk-one-login
      Type: String
      Description: User agent for HMRC requests

  NinoCheckUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/NinoCheckUrl"
      Type: String
      Description: URL for HMRC /check endpoint
      Value:
        Fn::If:
          - IsStubEnvironment
          - Fn::Sub:
              - "${ImposterApiUrl}/individuals/authentication/authenticator/api/match"
              - {
                  ImposterApiUrl: !ImportValue third-party-stubs-ImposterStubApiUrl,
                }
          - Fn::If:
              - IsStagingEnvironment
              - "https://test-api.service.hmrc.gov.uk/individuals/authentication/authenticator/api/match"
              - Fn::If:
                  - IsProductionEnvironment
                  - "https://api.service.hmrc.gov.uk/individuals/authentication/authenticator/api/match"
                  - ""

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref "Environment"]
      Description: default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [JwtTtlUnitMapping, Environment, !Ref Environment]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  PublicNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicNinoCheckApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-public"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.1.0"
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./public-api.yaml"
      OpenApiVersion: 3.1.0
      EndpointConfiguration:
        Type: REGIONAL

  PublicNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicNinoCheckApi}-public-AccessLogs
      RetentionInDays: 30

  DevOnlyNinoCheckApi:
    Type: AWS::Serverless::Api
    Condition: IsDevEnvironment
    Properties:
      Description: Private Dev NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${DevOnlyNinoCheckApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-dev-only-private"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.1.0"
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./private-api.yaml"
      OpenApiVersion: 3.1.0
      EndpointConfiguration:
        Type: REGIONAL

  DevOnlyNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsDevEnvironment
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${DevOnlyNinoCheckApi}-dev-only-AccessLogs
      RetentionInDays: 30

  PrivateNinoCheckApi:
    Type: AWS::Serverless::Api
    Condition: IsNotDevEnvironment
    Properties:
      Description: Private NINO check CRI API
      MethodSettings:
        - ResourcePath: "/*"
          LoggingLevel: INFO
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateNinoCheckApiAccessLogGroup}"
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-private"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {} # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./private-api.yaml"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: "execute-api:Invoke"
              Effect: Allow
              Principal: "*"
              Resource:
                - "execute-api:/*"

  PrivateNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsNotDevEnvironment
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateNinoCheckApi}-private-AccessLogs
      RetentionInDays: 30

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                  - "states:StartSyncExecution"
                Resource: "*"
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  NinoAttemptsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-nino-attempts"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"

  NinoUsersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-nino-users"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"

  MatchingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/matching
      Handler: matching-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/matching-handler.ts

  TimeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/issue-credential
      Handler: time-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/time-handler.ts

  CreateAuthCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/matching
      Handler: create-auth-code-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/create-auth-code-handler.ts

  CurrentTimeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/matching
      Handler: current-time-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/current-time-handler.ts

  CredentialSubjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/credential-subject
      Handler: credential-subject-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/credential-subject-handler.ts

  CheckSessionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-CheckSession"
      Type: EXPRESS
      DefinitionUri: ../step-functions/check_session.asl.json
      DefinitionSubstitutions:
        CurrentTimeFunctionArn: !GetAtt CurrentTimeFunction.Arn
        CommonStackName: !Ref CommonStackName
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt CheckSessionStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CurrentTimeFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ExecuteStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/matching
      Handler: execute-state-machine-handler.lambdaHandler
      Timeout: 60
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref CheckSessionStateMachine
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/execute-state-machine-handler.ts

  NinoCheckStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-NinoCheck"
      Type: EXPRESS
      DefinitionUri: ../step-functions/nino_check.asl.json
      DefinitionSubstitutions:
        CheckSessionStateMachineArn: !GetAtt CheckSessionStateMachine.Arn
        CreateAuthCodeFunctionArn: !GetAtt CreateAuthCodeFunction.Arn
        MatchingFunctionArn: !GetAtt MatchingFunction.Arn
        NinoAttemptsTable: !Ref NinoAttemptsTable
        NinoUsersTable: !Ref NinoUsersTable
        NinoCheckUrl: !Ref NinoCheckUrl
        UserAgent: !Ref UserAgent
        BearerTokenName: !Ref BearerTokenName
        CommonStackName: !Ref CommonStackName
        ExecuteStateMachineFunctionName: !Ref ExecuteStateMachineFunction
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt NinoCheckStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref ExecuteStateMachineFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateAuthCodeFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MatchingFunction
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Ref NinoAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBWritePolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - Statement:
            Effect: Allow
            Action:
              - states:StartSyncExecution
              - states:StartExecution
            Resource:
              - !Ref CheckSessionStateMachine
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/NinoCheckUrl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/UserAgent"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  NinoCheckStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-NinoCheck-state-machine-logs
      RetentionInDays: 30

  NinoIssueCredentialStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-NinoIssueCredential"
      Type: EXPRESS
      DefinitionUri: ../step-functions/nino_issue_credential.asl.json
      DefinitionSubstitutions:
        TimeFunctionArn: !GetAtt TimeFunction.Arn
        CredentialSubjectFunctionArn: !GetAtt CredentialSubjectFunction.Arn
        NinoAttemptsTable: !Ref NinoAttemptsTable
        MaxJwtTtlParameter: !Ref MaxJwtTtlParameter
        JwtTtlUnitParameter: !Ref JwtTtlUnitParameter
        CommonStackName: !Ref CommonStackName
        NinoUsersTable: !Ref NinoUsersTable
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt NinoIssueCredentialLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TimeFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CredentialSubjectFunction
        - DynamoDBReadPolicy:
            TableName: !Ref NinoAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"
        - Statement:
            Effect: Allow
            Action:
              - kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  NinoIssueCredentialLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-NinoIssueCredential-state-machine-logs
      RetentionInDays: 30

  CheckSessionStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/aws/apigateway/${AWS::StackName}-CheckSession-state-machine-logs
      RetentionInDays: 30

Outputs:
  StackName:
    Description: "CloudFormation stack name"
    Value: !Sub "${AWS::StackName}"

  ApiGatewayId:
    Description: "API GatewayID of the Address CRI API"
    Value: !Sub "${PublicNinoCheckApi}"
    Export:
      Name: !Sub ${AWS::StackName}-ApiGatewayId

  PublicApiGatewayId:
    Description: "API GatewayID of the public Address CRI API"
    Value: !Sub "${PublicNinoCheckApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicApiGatewayId

  PrivateApiGatewayId:
    Description: "API GatewayID of the private Address CRI API"
    Value:
      !If [
        IsNotDevEnvironment,
        !Ref PrivateNinoCheckApi,
        !Ref DevOnlyNinoCheckApi,
      ]
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId

  CurrentTimeFunction:
    Description: "Fetch Current Time Function Arn"
    Value: !GetAtt CurrentTimeFunction.Arn

  CurrentTimeFunctionRoleArn:
    Description: "Fetch Current Time Function Role Arn"
    Value: !GetAtt CurrentTimeFunctionRole.Arn

  CreateAuthCodeFunction:
    Description: "Create Authorization Code Function ARN"
    Value: !GetAtt CreateAuthCodeFunction.Arn

  CreateAuthCodeFunctionRoleArn:
    Description: "Create Authorization Code Function Arn"
    Value: !GetAtt CreateAuthCodeFunctionRole.Arn

  TimeFunction:
    Description: "Time Lambda Function ARN"
    Value: !GetAtt TimeFunction.Arn

  TimeFunctionRoleArn:
    Description: "TimeFunctionRole Arn"
    Value: !GetAtt TimeFunctionRole.Arn

  MatchingFunction:
    Description: "Matching Lambda Function ARN"
    Value: !GetAtt MatchingFunction.Arn

  MatchingFunctionRoleArn:
    Description: "MatchingFunctionRole Arn"
    Value: !GetAtt MatchingFunctionRole.Arn

  NinoCheckStateMachineArn:
    Description: "NinoCheck StateMachine Arn"
    Value: !GetAtt NinoCheckStateMachine.Arn

  CheckSessionStateMachineArn:
    Description: "Session Check StateMachine Arn"
    Value: !GetAtt CheckSessionStateMachine.Arn

  CommonStackName:
    Description: "Common Stack Name"
    Value: !Ref CommonStackName

  NinoIssueCredentialStateMachineIamRole:
    Description: "Implicit IAM Role created for Matching function"
    Value: !GetAtt NinoCheckStateMachineRole.Arn

  NinoAttemptsTable:
    Description: NinoAttemptsTable table name
    Value: !Ref NinoAttemptsTable

  NinoUsersTable:
    Description: NinoUsersTable table name
    Value: !Ref NinoUsersTable

  ExecuteStateMachineFunction:
    Description: "ExecuteStateMachine Lambda Function ARN"
    Value: !GetAtt ExecuteStateMachineFunction.Arn

  ExecuteStateMachineFunctionIamRole:
    Description: "Implicit IAM Role created for ExecuteStateMachine function"
    Value: !GetAtt ExecuteStateMachineFunctionRole.Arn
