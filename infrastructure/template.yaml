AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity IPV CRI Pdv-Matching API"

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Timeout: 3

Parameters:
  BearerTokenName:
    Type: String
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production

Conditions:
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Resources:
  UserAgent:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/UserAgent"
      Value: govuk-one-login
      Type: String
      Description: User agent for HMRC requests

  NinoCheckUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/NinoCheckUrl"
      Value: https://test-api.service.hmrc.gov.uk/individuals/authentication/authenticator/match
      Type: String
      Description: URL for HMRC /check endpoint

  PrivateNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private NINO check CRI API
      MethodSettings:
        - ResourcePath: "/*"
          # LoggingLevel: INFO
          HttpMethod: "*"
          # Disable data trace in production to avoid logging customer sensitive information
          # DataTraceEnabled: true
          # MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      # AccessLogSetting:
      #   DestinationArn: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateNinoCheckApiAccessLogGroup}"
      #   Format: >-
      #     {
      #     "requestId":"$context.requestId",
      #     "ip":"$context.identity.sourceIp",
      #     "requestTime":"$context.requestTime",
      #     "httpMethod":"$context.httpMethod",
      #     "path":"$context.path",
      #     "routeKey":"$context.routeKey",
      #     "status":"$context.status",
      #     "protocol":"$context.protocol",
      #     "responseLatency":"$context.responseLatency",
      #     "responseLength":"$context.responseLength"
      #     }
      TracingEnabled: true
      Name: !Sub "nino-check-cri-private-${AWS::StackName}"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {} # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./private-api.yaml"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: "execute-api:Invoke"
              Effect: Allow
              Principal: "*"
              Resource:
                - "execute-api:/*"

  # PrivateNinoCheckApiAccessLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateNinoCheckApi}-private-AccessLogs
  #     RetentionInDays: 365

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                  - "states:StartSyncExecution"
                Resource: "*"
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  NinoAttemptsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-nino-attempts"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"

  NinoUsersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-nino-users"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "nino"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "nino"
          KeyType: "HASH"

  MatchingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/matching
      Handler: matching-handler.lambdaHandler
      FunctionUrlConfig:
        AuthType: AWS_IAM
        Cors:
          AllowOrigins: ["*"]
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/matching-handler.ts

  NinoCheckStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-NinoCheck"
      Type: EXPRESS
      DefinitionUri: ../step-functions/nino_check.asl.json
      DefinitionSubstitutions:
        MatchingFunctionArn: !GetAtt MatchingFunction.Arn
        NinoAttemptsTable: !Ref NinoAttemptsTable
        NinoUsersTable: !Ref NinoUsersTable
        NinoCheckUrl: !Ref NinoCheckUrl
        UserAgent: !Ref UserAgent
        BearerTokenName: !Ref BearerTokenName
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt NinoCheckStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref MatchingFunction
        - DynamoDBWritePolicy:
            TableName: !Ref NinoAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/NinoCheckUrl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/UserAgent"
        - Statement:
            Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"

  NinoCheckStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-NinoCheck-state-machine-logs
      RetentionInDays: 365

Outputs:
  MatchingFunctionURLEndpoint:
    Description: FURLFunction function name
    Value: !GetAtt MatchingFunctionUrl.FunctionUrl
  MatchingFunction:
    Description: "Matching Lambda Function ARN"
    Value: !GetAtt MatchingFunction.Arn
  MatchingFunctionIamRole:
    Description: "Implicit IAM Role created for Matching function"
    Value: !GetAtt MatchingFunctionRole.Arn
