name: TypeScript Unit Tests
on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  pre-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./.github/actions/get-folder-names
    outputs:
      lambda-names: ${{ steps.set-matrix.outputs.lambda-names }}
    steps:
      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./.github/actions/get-folder-names/package-lock.json

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get lambda names
        id: get-lambda-names
        uses: ./.github/actions/get-folder-names
        with:
          path: "lambdas/"
      - name: debugging
        run: echo ${{ steps.get-lambda-names.outputs.names }}
      - id: set-matrix
        run: echo "::set-output name=lambda-names::${{ steps.get-lambda-names.outputs.names }}"
    #   - name: Checkout code
    #     uses: actions/checkout@v3
    #   - name: Get all lambda names
    #     id: getNames
    #     run: |
    #       names=""
    #       for dir in lambdas/*/
    #       do
    #           names+=\"$(basename -- "$dir")\",
    #       done
    #       echo names={\"lambda\": [${names%,}]} >> "$GITHUB_OUTPUT"

  run-lambda-unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambdas/${{ matrix.lambda }}
    needs: pre-test
    strategy:
      matrix: 
        lambda: ${{ fromJSON(needs.pre-test.outputs.lambda-names) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install Dependencies
        run: npm install
      - name: Run lint
        run: npm run lint
      - name: Run Tests
        run: npm run test
